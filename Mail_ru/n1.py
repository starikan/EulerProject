
n, m, k = 1, 1, 1
a = [1]
b = [100]

n, m, k = map(int, input().split(" "))
a = list(map(int, input().split(" ")))[:n]
b = list(map(int, input().split(" ")))[:m]

results = []

for ai in a:
  works = 0
  for bj in b:
    if abs(ai-bj) <= k:
      works += 1
  results.append(works)

max_mumber = max(results)
print(results.index(max_mumber) + 1 )

# Рабочие и работы
# ограничение по времени на тест2 секунды 
# ограничение по памяти на тест256 мегабайт
# вводстандартный ввод
# выводстандартный вывод
# Вы — начальник n рабочих и решаете, кому хотите повысить зарплату. Рабочие пронумерованы от 1 до n. Умение i-го рабочего равно ai. За последний месяц всего было m различных видов работ. Сложность j-го вида работы равна bj. Вы знаете, что рабочий i мог быть назначен на выполнение работы j тогда и только тогда, когда |ai - bj| ≤ k.

# Вы хотите повысить зарплату рабочему, который мог быть назначен на максимальное количество работ. Если таких рабочих несколько, то вы можете выбрать любого из них. Ваша задача — сообщить номер любого рабочего, который мог выполнить максимальное количество работ.

# Входные данные
# Первая строка входных данных содержит три целых числа n, m и k (1 ≤ n, m, k ≤ 100) — количество рабочих, количество работ и максимальное значение разницы.

# Вторая строка входных данных содержит n целых чисел a1, a2, ..., an (1 ≤ ai ≤ 100), где ai равно умению i-го рабочего.

# Третья строка входных данных содержит m целых чисел b1, b2, ..., bm (1 ≤ bj ≤ 100), где bj равно сложности j-й работы.

# Выходные данные
# Выведите одно целое число — номер любого рабочего, который мог выполнить максимальное количество работ.

# Примеры
# входные данные
# 5 5 2
# 1 2 3 4 5
# 1 2 3 4 5
# выходные данные
# 3
# входные данные
# 6 7 4
# 18 1 3 10 8 14
# 1 4 12 11 20 5 6
# выходные данные
# 5
# входные данные
# 1 1 1
# 1
# 100
# выходные данные
# 1