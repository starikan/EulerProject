# n = 9
# a = [1,1,2,1,1,2,1,1,1]
n = 7
a = [1, 3, 1, 2, 1, 1, 4]
# n = 20000
# a = [1] * n + [2] * (n -156) + [3] * (n-1555) + [4] * 299

n = int(input())
a = list(map(int, input().split(" ")))[:n]

a1 = [i + 1 for i, ai in enumerate(a) if ai == 1]
a2 = [i + 1 for i, ai in enumerate(a) if ai == 2]
a3 = [i + 1 for i, ai in enumerate(a) if ai == 3]
a4 = [[i + 1] for i, ai in enumerate(a) if ai == 4]

results = a4

min_len = min(len(a3), len(a1))
results += zip(a3[:min_len], a1[:min_len])
a3 = a3[min_len:]
a1 = a1[min_len:]

if len(a3):
  results += [[i] for i in a3]
  a3 = []

if len(a2):
  a2_full = [a2[i:i+2] for i in range(0, len(a2), 2)]
  if (len(a2_full[-1]) == 1):
    results += a2_full[:-1]
    a2 = a2_full[-1]
  else:
    results += a2_full
    a2 = []

  if len(a2):
    if len(a1):
      if len(a1) == 1:
        results.append([a2[0], a1[0]])
        a1 = []
      if len(a1) > 1:
        results.append([a2[0], a1[0], a1[1]])
        a1 = a1[2:]
    else:
      results.append(a2)

if len(a1):
  results += [a1[i:i+4] for i in range(0, len(a1), 4)]


print(len(results))

strings = []
for r in results:
  str_res = str(len(r))
  for i in r:
    str_res = str_res + ' ' + str(i)
  strings.append(str_res)
print('\n'.join(strings))

# Курьерская служба
# ограничение по времени на тест2 секунды 
# ограничение по памяти на тест256 мегабайт
# вводстандартный ввод
# выводстандартный вывод
# Вы работаете в отделе, оптимизирующем работу курьерской службы.

# Недавно вам поступило n заказов, i-й заказ имеет массу ai, причем каждый из заказов имеет массу, равную 1, 2, 3 или 4 килограммам. Известно, что один курьер может нести с собой некоторый набор заказов (возможно, с одинаковыми массами), но не может нести с собой заказы с суммарной массой более 4 килограмм.

# Примеры некоторых корректных наборов заказов:

# [1, 2] (суммарная масса равна 3);
# [4] (суммарная масса равна 4);
# [1, 1, 1, 1] (суммарная масса равна 4).
# И примеры некоторых некорректных наборов заказов:

# [1, 2, 3] (суммарная масса равна 6);
# [4, 1] (суммарная масса равна 5);
# Вам необходимо распределить эти заказы между минимальным количеством курьеров и сообщить, какие именно заказы должен доставлять каждый курьер. Обратите внимание, что в силу ограничений ответ всегда существует.

# Входные данные
# Первая строка входных данных содержит одно целое число n (1 ≤ n ≤ 2·105) — количество заказов.

# Вторая строка входных данных содержит n целых чисел a1, a2, ..., an (1 ≤ ai ≤ 4), где ai равно массе i-го заказа.

# Выходные данные
# В первой строке выведите одно целое число m (1 ≤ m ≤ n) — минимально возможное количество курьеров, необходимое для того, чтобы доставить все заданные товары. Обратите внимание, что в силу ограничений ответ всегда существует.

# В следующих m строках выведите информацию о курьерах. В i-й строке выведите сначала одно целое число si (1 ≤ si ≤ 4) — количество товаров, которые будет доставлять i-й курьер. Затем выведите si целых чисел xi, 1, xi, 2, ..., xi, si, где xi, j равно индексу j-го товара, который будет доставлять i-й курьер.

# Заметьте, что никакие xi, j не могут совпадать друг с другом и в их объединении должно быть каждое целое число от 1 до n (иными словами, каждый товар должен быть доставлен, причем доставлен ровно одним курьером).

# Примеры
# входные данные
# 7
# 1 3 1 2 1 1 4
# выходные данные
# 4
# 2 6 2 
# 3 4 5 3 
# 1 1 
# 1 7 
# входные данные
# 4
# 4 2 1 3
# выходные данные
# 3
# 2 3 4 
# 1 2 
# 1 1 
# входные данные
# 9
# 1 1 2 1 1 2 1 1 1
# выходные данные
# 3
# 2 6 3 
# 4 9 8 7 5 
# 3 4 2 1 